import{a as p,i as l}from"./assets/vendor-CxMptR52.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const d of o)if(d.type==="childList")for(const s of d.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function e(o){const d={};return o.integrity&&(d.integrity=o.integrity),o.referrerPolicy&&(d.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?d.credentials="include":o.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function a(o){if(o.ep)return;o.ep=!0;const d=e(o);fetch(o.href,d)}})();const x="production";console.log(x);p.defaults.baseURL="https://api.murselsen.com/";const f=n=>{const t=document.createElement("li");t.classList.add("reminder-item"),t.id=`remTodo${n.id}`;const e=document.createElement("div");e.classList.add("remContent");const a=document.createElement("label");a.setAttribute("for",`rem${n.id}`),a.classList.add("remCheckbox");const o=document.createElement("i");o.classList.add("fa-regular",n.completed?"fa-circle-check":"fa-circle","fa-2x"),o.id=`rem${n.id}circle`;const d=document.createElement("input");d.type="checkbox",d.name="complete",d.hidden=!0,d.id=`rem${n.id}`,a.appendChild(o),a.appendChild(d);const s=document.createElement("div");s.classList.add("remInfo");const i=document.createElement("h4");i.classList.add("title"),i.textContent=n.title;const c=document.createElement("p");c.classList.add("description"),c.textContent=n.description;const r=document.createElement("div");r.classList.add("infoBox");const m=document.createElement("span");if(m.classList.add("infoItem"),m.textContent=n.date,n.time){const u=document.createElement("span");u.classList.add("infoItem"),u.textContent=n.time,r.appendChild(u)}r.appendChild(m);const C=document.createElement("div");C.classList.add("tagBox"),n.tags.forEach(u=>{const y=document.createElement("span");y.classList.add("tagItem"),y.textContent=u,C.appendChild(y)}),s.appendChild(i),s.appendChild(c),s.appendChild(r),s.appendChild(C);const g=document.createElement("div");g.classList.add("remActions");const h=document.createElement("button");h.classList.add("btn","text-danger","todo-del","fa-solid","fa-trash"),h.dataset.source=n.id;const E=document.createElement("button");E.classList.add("btn","text-warning","todo-edit","fa-solid","fa-pencil"),E.dataset.source=n.id,g.appendChild(h),g.appendChild(E),e.appendChild(a),e.appendChild(s),e.appendChild(g);const L=document.createElement("div");L.classList.add("remSplit");const b=document.createElement("hr");b.classList.add("remSplitHr"),L.appendChild(b),t.appendChild(e),t.appendChild(L),document.querySelector("#remindersList").appendChild(t)},T=()=>{console.time("renderReminders");const n=document.querySelector("#remindersList");n.innerHTML="",p.get("todos").then(t=>{let e=t.data;l.success({title:"GET : Başarılı",message:`<b>Yapılacaklar</b> listesine ait <b>${e.totalTodoCount}</b> veri geldi !`,position:"topRight"}),e.todos.forEach(a=>f(a)),document.querySelector("#totalTodoCount").textContent=e.totalTodoCount,document.querySelector("#completedTodoCount").textContent=e.completedTodoCount}).catch(t=>{console.error("Api Todos - Error: ",t);const e=document.createElement("li");e.classList.add("reminder-item");const a=document.createElement("div");a.classList.add("remContent");const o=document.createElement("label");o.classList.add("remCheckbox");const d=document.createElement("i");d.classList.add("fa-regular","fa-times-circle","fa-2x"),d.style.color="red",o.appendChild(d),a.appendChild(o);const s=document.createElement("div");s.classList.add("remInfo");const i=document.createElement("h4");i.classList.add("title"),i.textContent=t.message,i.style.color="red",s.appendChild(i),a.appendChild(s),e.appendChild(a),document.querySelector("#remindersList").style.marginBottom="20px",document.querySelector("#remindersList").appendChild(e),l.error({title:"GET : Hata",message:t.message,description:"Yapılacaklar listesi için yapılan istekten veriler getirilemedi !",position:"topRight"})}),console.timeEnd("renderReminders")};T();const I=()=>{console.time("renderCategories");const n=document.querySelector("#sidebarCategoryList");n.innerHTML="",p.get("categories").then(t=>{let e=t.data.dbCategories;l.success({title:"GET : Başarılı",message:`<b>Kategoriler</b> listesine ait <b>${t.data.totalCategoriesCount}</b> veri geldi !`,position:"topRight"}),e.forEach(a=>{const o=document.createElement("li");o.classList.add("categoryItem"),o.dataset.id=a.id;const d=document.createElement("div");d.classList.add("categoryItem-icon"),d.style.backgroundColor=a.color;const s=document.createElement("span");s.textContent=a.icon,d.appendChild(s),o.appendChild(d);const i=document.createElement("p");i.classList.add("categoryItem-text"),i.textContent=a.title,o.appendChild(i);const c=document.createElement("button");c.classList.add("categoryItem-button"),c.id=`categoryItem${a.id}`,c.dataset.source=a.id;const r=document.createElement("i");r.classList.add("fa-solid","fa-map-pin"),c.appendChild(r),o.appendChild(c);const m=document.createElement("span");m.classList.add("categoryItem-count"),m.textContent=a.count,o.appendChild(m),n.appendChild(o)})}).catch(t=>{console.error("Api Categroies Error: ",t);const e=document.createElement("li");e.classList.add("categoryItem");const a=document.createElement("p");a.classList.add("categoryItem-text"),a.style.color="red",a.textContent=t.message,e.appendChild(a),n.appendChild(e),l.error({title:"GET : Hata",message:t.message,description:"Kategoriler için yapılan istekten veriler getirilemedi !",position:"topRight"})}),console.timeEnd("renderCategories")};I();const S=n=>{const t=document.createElement("li");t.classList.add("tagItem");const e=document.createElement("a");e.classList.add("tagLink"),e.href="#",e.dataset.source=n,e.textContent=n,t.appendChild(e),document.querySelector("#sidebarTagList").appendChild(t)},q=()=>{console.time("renderTags"),document.querySelector("#sidebarTagList").innerHTML="",p.get("tags").then(n=>{l.success({title:"GET : Başarılı",message:`<b>Etiket</b> listesine ait <b>${n.data.totalTagsCount}</b> veri geldi !`,position:"topRight"});let t=n.data.dbTags;for(let e of t)S(e)}).catch(n=>{const t=document.createElement("li");t.classList.add("tagItem");const e=document.createElement("a");e.classList.add("tagLink"),e.style.color="red",e.textContent=n.message,t.appendChild(e),document.querySelector("#sidebarTagList").appendChild(t),l.error({title:`${n.name} : ${n.config.url}`,message:n.message,description:"Etiketler için yapılan istekten veriler getirilemedi !",position:"topRight"})}),console.timeEnd("renderTags")};q();document.querySelector("#sidebarCategoryList").addEventListener("click",n=>{if(n.target.nodeName==="LI"){document.querySelector("#byCategoryHeader").textContent=n.target.querySelector(".categoryItem-text").textContent;let t=n.target.dataset.id;p.get(`todos/category/${t.toString()}`).then(e=>{const a=e.data.dbTodos;if(l.success({title:"GET : Başarılı",message:`<b>${n.target.querySelector(".categoryItem-text").textContent}</b> kategorisine ait <b>${a.length}</b> veri geldi !`,position:"topRight"}),a.length>0)document.querySelector("#remindersList").innerHTML="",a.forEach(o=>{f(o)});else{document.querySelector("#remindersList").innerHTML="";const o=document.createElement("li");o.classList.add("reminder-item");const d=document.createElement("div");d.classList.add("remContent");const s=document.createElement("label");s.classList.add("remCheckbox");const i=document.createElement("i");i.classList.add("fa-solid","fa-info-circle","fa-2x"),i.style.color="yellow",s.appendChild(i),d.appendChild(s);const c=document.createElement("div");c.classList.add("remInfo");const r=document.createElement("h4");r.classList.add("title"),r.textContent="Kategori ait hiçbir veri bulunamadı !",r.style.color="yellow",c.appendChild(r),d.appendChild(c),o.appendChild(d),document.querySelector("#remindersList").style.padding="30px",document.querySelector("#remindersList").style.paddingLeft="0px",document.querySelector("#remindersList").style.marginBottom="20px",document.querySelector("#remindersList").appendChild(o)}document.querySelector("#totalTodoCount").textContent=e.data.dbTotalTodoCount||0,document.querySelector("#completedTodoCount").textContent=e.data.dbCompletedTodoCount||0}).catch(e=>{console.error("Category Todos: ",e),l.error({title:`${e.name} : ${e.code}`,message:e.message,description:"Kategoriye ait veriler getirilemedi !",position:"topRight"})})}},{passive:!0});document.querySelector("#sidebarTagList").addEventListener("click",n=>{let t=n.target.dataset.source;console.log("Seçilen Etiket: "+t),p.get(`todos/tag/${t}`).then(e=>{l.success({title:"GET : Başarılı",message:`<b>#${t.charAt(0).toUpperCase()+t.slice(1)}</b> etiketine ait <b>${e.data.totalTodosCount}</b> veri geldi !`,position:"topRight"}),console.log("Tag Todos: ",e);const a=e.data.totalTodosCount,o=e.data.completedTodosCount,d=e.data.dbTodos;document.querySelector("#byCategoryHeader").textContent="#"+t,document.querySelector("#totalTodoCount").textContent=a,document.querySelector("#completedTodoCount").textContent=o,document.querySelector("#remindersList").innerHTML="",d.forEach(s=>{f(s)})}).catch(e=>{console.log("Tag Todos Error: ",e),l.error({title:`${e.name} : ${e.code}`,message:e.message,description:"Etiketlere ait veriler getirilemedi !",position:"topRight"})})});
//# sourceMappingURL=index.js.map
